@model PaginatedList<DayBook.Web.ViewModels.Record.RecordViewModel>
@{
    ViewData["Title"] = "My Records";
}

<div class="row">
    <div class="col-md-12">
        <h2>My records</h2>

        <br>
        <p>
            <a asp-controller="Record" asp-action="Create">Create New</a>
        </p>
        <hr />
        <form asp-controller="Record" asp-action="Index" method="get">
            <div class="form-actions no-color">
                <p>
                    Find by text: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                    <input type="submit" value="Search" class="btn btn-default" /> |
                    <a asp-action="Index">Back to Full List</a>
                </p>
            </div>
        </form>
        <hr />
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Title
                    </th>
                    <th>
                        Date Created
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateCreated)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", "Record", new { id = item.Id })
                            @("| ")
                            @Html.ActionLink("Details", "Details", "Record", new { id = item.Id })

                            @if (item.DateCreated > DateTime.Now.AddDays(-2))
                            {
                                @("| ")
                                @Html.ActionLink("Delete", "Delete", "Record", new { id = item.Id })
                            }
                        </td>
                    </tr>
                }

            </tbody>
        </table>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            Next
        </a>

    </div>

</div>
